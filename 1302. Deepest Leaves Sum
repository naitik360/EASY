/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int deepestLeavesSum(TreeNode* root) {
        queue<TreeNode*> q;
        q.push(root);
        int ans=0;
        while(q.size())
        {
            int h=q.size(),s=0;
            while(h--)
            {   
                TreeNode* t=q.front();
                q.pop();
                if(t->left==NULL && t->right==NULL)
                      s=s+(t->val);
                
                if(t->left)
                     q.push(t->left);
                if(t->right)
                      q.push(t->right);
            }
            ans=s;
        }
        return ans;
    }
};
