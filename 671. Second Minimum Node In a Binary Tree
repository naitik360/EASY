/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,map<int,int> &v)
    {
        if(root==NULL)
             return ;
        find(root->left,v);
        v[root->val]++;
        find(root->right,v);
    }
    int findSecondMinimumValue(TreeNode* root){
        map<int,int> v;
        int h=-1;
        find(root,v);
        if(v.size()<=1)
            return -1;
        else
        {   
            int t=0;
            for(auto i : v)
            {
                t++;
                if(t==2)
                {
                    h=i.first;
                    break;
                }
            }
        }
      return h;
    }
};
