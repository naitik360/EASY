/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    vector<vector<int>> levelOrderBottom(TreeNode* root) {
        vector<vector<int>> res;
    if(!root)
        return res;
    vector<int> vlevel;
    queue<TreeNode*> q;
    q.push(root);
    int level1=1,level2=0;
    while(!q.empty()){
        TreeNode* front = q.front();
        q.pop();
        vlevel.push_back(front->val);
        if(front->left){
            q.push(front->left);
            ++level2;
        }
        if(front->right){
            q.push(front->right);
            ++level2;
        }
        
        
        if(--level1 == 0){
            res.push_back(vlevel);
            level1 = level2;
            level2=0;
            vlevel.clear();
        }
        
    }
    reverse(res.begin(),res.end());
    return res;
    }
};
