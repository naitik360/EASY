/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    int sumOfLeftLeaves(TreeNode* root) {
        if (root == NULL)
        return 0;
    queue<pair<TreeNode*, bool> > q;
    q.push({ root, 0 });
    int sum = 0;
    while (!q.empty()) {
        TreeNode* temp = q.front().first;
        bool is_left_child = 
                   q.front().second;
        q.pop();
        if (!temp->left && !temp->right &&
                            is_left_child)
            sum = sum + temp->val;
        if (temp->left) {
            q.push({ temp->left, 0 });
        }
        if (temp->right) {
            q.push({ temp->right, 1 });
        }
     }
    return sum;
    }
};
