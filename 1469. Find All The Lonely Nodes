/**
 * Definition for a binary tree node.
 * struct TreeNode {
 *     int val;
 *     TreeNode *left;
 *     TreeNode *right;
 *     TreeNode() : val(0), left(nullptr), right(nullptr) {}
 *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}
 *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}
 * };
 */
class Solution {
public:
    void find(TreeNode* root,vector<int> &v) {
        if(root==NULL)
             return ;
        if((root->left==NULL && root->right!=NULL) || (root->right==NULL && root->left!=NULL))
        {
             if((root->left==NULL && root->right!=NULL))
             {
                 
                     v.push_back(root->right->val);
             }
            else if((root->left!=NULL && root->right==NULL))
             {

                     v.push_back(root->left->val);
             }
        }
        if(root->left!=NULL)
             find(root->left,v);
        if(root->right!=NULL)
             find(root->right,v);
     }
    
    vector<int> getLonelyNodes(TreeNode* root) {
        vector<int> v;
        find(root,v);
        return v;
     }
};
