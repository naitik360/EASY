class Solution{
public:
    bool check(TreeNode* root1,TreeNode* root2)
    {
        if(!root1 && !root2)
            return 1;
        if(!root1 || !root2)
            return 0;
        if(root1->val != root2->val)
            return 0;
        return check(root1->left,root2->left)&&check(root1->right,root2->right);
    }
    bool isSubtree(TreeNode* root1, TreeNode* root2) {
        queue<TreeNode*> q;
        q.push(root1);
        while(!q.empty()) {
            auto curr = q.front();
            q.pop();
            if(curr->val == root2->val && check(curr, root2))
                return true;
            if(curr->left)
                q.push(curr->left);
            if(curr->right)
                q.push(curr->right);
        }
        return false;
    }
};
